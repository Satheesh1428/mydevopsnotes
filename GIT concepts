GIT concepts and inter view qustions:
=================
How git will support sharing and versioning code?
Centarlized vs distributed version control and how git resolve it ?
What is fork , what is the use of it ?
What is .GIT 
           .git folder by using this GIT will track all the chnages happening in repository 
           $ ls .git
           COMMIT_EDITMSG  HEAD  config  description  hooks/  index  info/  logs/  objects/  refs/
Git object types:
1) blob -- stores Any files 
2) Tree -- Stores directory
3) Commit -- stores different versions
4) Annotated tag : stores pomiter of commits

Hash functions: MD5(128 bit) , SHA1(160 bit/40 hexa decimal characters), SHA256(256 bit), SHA384(384 bit), SHA512(512 BIT)
                GIT uses SHA1 hash funcation

Git low level commands:
=======================
1) git hash-objects  -- to create new blob objects
2) git cat -file     -- to read git objects
3) git mktree        -- to create new tree object






git commands:
=================
1) git init: it will intialize the git repository , it will create .git folder autimatcically , to open .git folder in windows 
   we use "strat ." / "explorer ." 

2) git status
   On branch master
   Untracked files:
   (use "git add <file>..." to include in what will be committed)
        shellscript-projects/

    nothing added to commit but untracked files present (use "git add" to track)

3)git diff

4) git add -----git commit-----git push 
5) git add filename
6) git commit -m " enter commit message you want"
7) git push it will push the code to distributed system(ex github).
   git push
8) git log
9) git reset  --hard commitid 
10 git clone 
 
